import { PathTransformVisitor, mergeTransformer } from "./transformer.js";
import { decorates, not, isStdlib } from "./utils.js";
export function registerDecorator(decorator) {
    TopLevelDecorator.registerVisitor(decorator);
    return TopLevelDecorator;
}
export class TopLevelDecorator extends PathTransformVisitor {
    static _visitor;
    static registerVisitor(visitor) {
        TopLevelDecorator._visitor = visitor;
    }
    get visitor() {
        return TopLevelDecorator._visitor;
    }
    visitDecoratorNode(node) {
        if (this.visitor.decoratorMatcher(node)) {
            this.visitor.currentPath = this.currentParentPath;
            this.visitor.visit(this.currentParent);
        }
    }
    afterParse(_) {
        mergeTransformer(this, this.visitor);
        this.visit(this.program.sources.filter(this.visitor.sourceFilter));
    }
}
export class Decorator extends PathTransformVisitor {
    /**
     * Default filter that removes library files
     */
    get sourceFilter() {
        return not(isStdlib);
    }
    get decoratorMatcher() {
        return (node) => decorates(node, this.name);
    }
    get name() { return ""; }
    getDecorator(node) {
        return node.decorators && node.decorators.find(this.decoratorMatcher) || null;
    }
}
export class ClassDecorator extends Decorator {
}
export class FunctionDecorator extends Decorator {
}
export class VariableDecorator extends Decorator {
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVjb3JhdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2RlY29yYXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQVkxRSxPQUFPLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFFdEQsTUFBTSxVQUFVLGlCQUFpQixDQUFDLFNBQTJCO0lBQzNELGlCQUFpQixDQUFDLGVBQWUsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUM3QyxPQUFPLGlCQUFpQixDQUFDO0FBQzNCLENBQUM7QUFPRCxNQUFNLE9BQU8saUJBQWtCLFNBQVEsb0JBQW9CO0lBQ2pELE1BQU0sQ0FBQyxRQUFRLENBQW1CO0lBRTFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsT0FBeUI7UUFDOUMsaUJBQWlCLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQztJQUN2QyxDQUFDO0lBRUQsSUFBWSxPQUFPO1FBQ2pCLE9BQU8saUJBQWlCLENBQUMsUUFBUSxDQUFDO0lBQ3BDLENBQUM7SUFFRCxrQkFBa0IsQ0FBQyxJQUFtQjtRQUNwQyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDdkMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDO1lBQ2xELElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztTQUN4QztJQUNILENBQUM7SUFFRCxVQUFVLENBQUMsQ0FBUztRQUNsQixnQkFBZ0IsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztJQUNyRSxDQUFDO0NBRUY7QUFFRCxNQUFNLE9BQWdCLFNBQVUsU0FBUSxvQkFBb0I7SUFDMUQ7O09BRUc7SUFDSCxJQUFJLFlBQVk7UUFDZCxPQUFPLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN2QixDQUFDO0lBRUQsSUFBSSxnQkFBZ0I7UUFDbEIsT0FBTyxDQUFDLElBQW1CLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFBO0lBQzVELENBQUM7SUFFRCxJQUFJLElBQUksS0FBYSxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFFakMsWUFBWSxDQUFDLElBQTBCO1FBQ3JDLE9BQU8sSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxJQUFJLENBQUM7SUFDaEYsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFnQixjQUFlLFNBQVEsU0FBUztDQUlyRDtBQUVELE1BQU0sT0FBZ0IsaUJBQWtCLFNBQVEsU0FBUztDQUV4RDtBQUVELE1BQU0sT0FBZ0IsaUJBQWtCLFNBQVEsU0FBUztDQUV4RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhdGhUcmFuc2Zvcm1WaXNpdG9yLCBtZXJnZVRyYW5zZm9ybWVyIH0gZnJvbSBcIi4vdHJhbnNmb3JtZXIuanNcIjtcclxuaW1wb3J0IHtcclxuICBDbGFzc0RlY2xhcmF0aW9uLFxyXG4gIEZpZWxkRGVjbGFyYXRpb24sXHJcbiAgTWV0aG9kRGVjbGFyYXRpb24sXHJcbiAgUGFyc2VyLFxyXG4gIFZhcmlhYmxlRGVjbGFyYXRpb24sXHJcbiAgRnVuY3Rpb25EZWNsYXJhdGlvbixcclxuICBTb3VyY2UsXHJcbiAgRGVjb3JhdG9yTm9kZSxcclxuICBEZWNsYXJhdGlvblN0YXRlbWVudCxcclxufSBmcm9tIFwiYXNzZW1ibHlzY3JpcHQvZGlzdC9hc3NlbWJseXNjcmlwdC5qc1wiO1xyXG5pbXBvcnQgeyBkZWNvcmF0ZXMsIG5vdCwgaXNTdGRsaWIgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHJlZ2lzdGVyRGVjb3JhdG9yKGRlY29yYXRvcjogRGVjb3JhdG9yVmlzaXRvcikge1xyXG4gIFRvcExldmVsRGVjb3JhdG9yLnJlZ2lzdGVyVmlzaXRvcihkZWNvcmF0b3IpO1xyXG4gIHJldHVybiBUb3BMZXZlbERlY29yYXRvcjtcclxufVxyXG5cclxuaW50ZXJmYWNlIERlY29yYXRvclZpc2l0b3IgZXh0ZW5kcyBQYXRoVHJhbnNmb3JtVmlzaXRvciB7XHJcbiAgZGVjb3JhdG9yTWF0Y2hlcjogKG5vZGU6IERlY29yYXRvck5vZGUpID0+IGJvb2xlYW47XHJcbiAgc291cmNlRmlsdGVyOiAoczogU291cmNlKSA9PiBib29sO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgVG9wTGV2ZWxEZWNvcmF0b3IgZXh0ZW5kcyBQYXRoVHJhbnNmb3JtVmlzaXRvciB7XHJcbiAgcHJpdmF0ZSBzdGF0aWMgX3Zpc2l0b3I6IERlY29yYXRvclZpc2l0b3I7XHJcblxyXG4gIHN0YXRpYyByZWdpc3RlclZpc2l0b3IodmlzaXRvcjogRGVjb3JhdG9yVmlzaXRvcik6IHZvaWQge1xyXG4gICAgVG9wTGV2ZWxEZWNvcmF0b3IuX3Zpc2l0b3IgPSB2aXNpdG9yO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBnZXQgdmlzaXRvcigpOiBEZWNvcmF0b3JWaXNpdG9yIHtcclxuICAgIHJldHVybiBUb3BMZXZlbERlY29yYXRvci5fdmlzaXRvcjtcclxuICB9XHJcblxyXG4gIHZpc2l0RGVjb3JhdG9yTm9kZShub2RlOiBEZWNvcmF0b3JOb2RlKSB7XHJcbiAgICBpZiAodGhpcy52aXNpdG9yLmRlY29yYXRvck1hdGNoZXIobm9kZSkpIHtcclxuICAgICAgdGhpcy52aXNpdG9yLmN1cnJlbnRQYXRoID0gdGhpcy5jdXJyZW50UGFyZW50UGF0aDtcclxuICAgICAgdGhpcy52aXNpdG9yLnZpc2l0KHRoaXMuY3VycmVudFBhcmVudCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBhZnRlclBhcnNlKF86IFBhcnNlcik6IHZvaWQge1xyXG4gICAgbWVyZ2VUcmFuc2Zvcm1lcih0aGlzLCB0aGlzLnZpc2l0b3IpO1xyXG4gICAgdGhpcy52aXNpdCh0aGlzLnByb2dyYW0uc291cmNlcy5maWx0ZXIodGhpcy52aXNpdG9yLnNvdXJjZUZpbHRlcikpO1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBEZWNvcmF0b3IgZXh0ZW5kcyBQYXRoVHJhbnNmb3JtVmlzaXRvciB7XHJcbiAgLyoqXHJcbiAgICogRGVmYXVsdCBmaWx0ZXIgdGhhdCByZW1vdmVzIGxpYnJhcnkgZmlsZXNcclxuICAgKi9cclxuICBnZXQgc291cmNlRmlsdGVyKCk6IChzOiBTb3VyY2UpID0+IGJvb2wge1xyXG4gICAgcmV0dXJuIG5vdChpc1N0ZGxpYik7XHJcbiAgfVxyXG5cclxuICBnZXQgZGVjb3JhdG9yTWF0Y2hlcigpOiAobm9kZTogRGVjb3JhdG9yTm9kZSkgPT4gYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gKG5vZGU6IERlY29yYXRvck5vZGUpID0+IGRlY29yYXRlcyhub2RlLCB0aGlzLm5hbWUpXHJcbiAgfVxyXG5cclxuICBnZXQgbmFtZSgpOiBzdHJpbmcgeyByZXR1cm4gXCJcIjsgfVxyXG5cclxuICBnZXREZWNvcmF0b3Iobm9kZTogRGVjbGFyYXRpb25TdGF0ZW1lbnQpOiBEZWNvcmF0b3JOb2RlIHwgbnVsbCB7XHJcbiAgICByZXR1cm4gbm9kZS5kZWNvcmF0b3JzICYmIG5vZGUuZGVjb3JhdG9ycy5maW5kKHRoaXMuZGVjb3JhdG9yTWF0Y2hlcikgfHwgbnVsbDtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBDbGFzc0RlY29yYXRvciBleHRlbmRzIERlY29yYXRvciB7XHJcbiAgYWJzdHJhY3QgdmlzaXRGaWVsZERlY2xhcmF0aW9uKG5vZGU6IEZpZWxkRGVjbGFyYXRpb24pOiB2b2lkO1xyXG4gIGFic3RyYWN0IHZpc2l0TWV0aG9kRGVjbGFyYXRpb24obm9kZTogTWV0aG9kRGVjbGFyYXRpb24pOiB2b2lkO1xyXG4gIGFic3RyYWN0IHZpc2l0Q2xhc3NEZWNsYXJhdGlvbihub2RlOiBDbGFzc0RlY2xhcmF0aW9uKTogdm9pZDtcclxufVxyXG5cclxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEZ1bmN0aW9uRGVjb3JhdG9yIGV4dGVuZHMgRGVjb3JhdG9yIHtcclxuICBhYnN0cmFjdCB2aXNpdEZ1bmN0aW9uRGVjbGFyYXRpb24obm9kZTogRnVuY3Rpb25EZWNsYXJhdGlvbik6IHZvaWQ7XHJcbn1cclxuXHJcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBWYXJpYWJsZURlY29yYXRvciBleHRlbmRzIERlY29yYXRvciB7XHJcbiAgYWJzdHJhY3QgdmlzaXRWYXJpYWJsZURlY2xhcmF0aW9uKG5vZGU6IFZhcmlhYmxlRGVjbGFyYXRpb24pOiB2b2lkO1xyXG59XHJcbiJdfQ==