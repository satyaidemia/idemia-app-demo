{"version":3,"sources":["../../../../libs/compiler/src/languageService.ts"],"sourcesContent":["import ts from 'typescript';\r\n\r\nexport class LanguageServiceHost implements ts.LanguageServiceHost {\r\n    files: ts.MapLike<ts.IScriptSnapshot> = {};\r\n    addFile(fileName: string, text: string) {\r\n        this.files[fileName] = ts.ScriptSnapshot.fromString(text);\r\n    }\r\n    readFile(fileName: string) {\r\n        const snapshot = this.files[fileName];\r\n        return snapshot ? snapshot.getText(0, snapshot.getLength()) : undefined;\r\n    }\r\n    fileExists(fileName: string) {\r\n        return fileName in this.files;\r\n    }\r\n    getCompilationSettings = () => ts.getDefaultCompilerOptions();\r\n    getScriptFileNames = () => Object.keys(this.files);\r\n    getScriptVersion = () => '0';\r\n    getScriptSnapshot = (fileName: string) => this.files[fileName];\r\n    getCurrentDirectory = () => process.cwd();\r\n    getDefaultLibFileName = (options: ts.CompilerOptions) => ts.getDefaultLibFilePath(options);\r\n}\r\n\r\nfunction createDefaultFormatCodeSettings(): ts.FormatCodeSettings {\r\n\r\n    return {\r\n        baseIndentSize: 0,\r\n        indentSize: 4,\r\n        tabSize: 4,\r\n        indentStyle: ts.IndentStyle.Smart,\r\n        newLineCharacter: '\\n',\r\n        convertTabsToSpaces: true,\r\n        trimTrailingWhitespace: true,\r\n        insertSpaceAfterCommaDelimiter: true,\r\n        insertSpaceAfterSemicolonInForStatements: true,\r\n        insertSpaceBeforeAndAfterBinaryOperators: true,\r\n        insertSpaceAfterConstructor: false,\r\n        insertSpaceAfterKeywordsInControlFlowStatements: true,\r\n        insertSpaceAfterFunctionKeywordForAnonymousFunctions: false,\r\n        insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: false,\r\n        insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: false,\r\n        insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces: true,\r\n        insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: false,\r\n        insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces: false,\r\n        insertSpaceAfterTypeAssertion: false,\r\n        insertSpaceBeforeFunctionParenthesis: false,\r\n        placeOpenBraceOnNewLineForFunctions: false,\r\n        placeOpenBraceOnNewLineForControlBlocks: false,\r\n        insertSpaceBeforeTypeAnnotation: false\r\n    };\r\n}\r\n\r\nexport function formatter(text: string, options = createDefaultFormatCodeSettings()) {\r\n    const host = new LanguageServiceHost();\r\n    host.addFile('entry.ts', text);\r\n\r\n    const languageService = ts.createLanguageService(host);\r\n    const edits = languageService.getFormattingEditsForDocument('entry.ts', options);\r\n    edits\r\n        .sort((a, b) => a.span.start - b.span.start)\r\n        .reverse()\r\n        .forEach(edit => {\r\n            const head = text.slice(0, edit.span.start);\r\n            const tail = text.slice(edit.span.start + edit.span.length);\r\n            text = `${head}${edit.newText}${tail}`;\r\n        });\r\n\r\n    return text;\r\n}"],"names":["LanguageServiceHost","formatter","addFile","fileName","text","files","ts","ScriptSnapshot","fromString","readFile","snapshot","getText","getLength","undefined","fileExists","getCompilationSettings","getDefaultCompilerOptions","getScriptFileNames","Object","keys","getScriptVersion","getScriptSnapshot","getCurrentDirectory","process","cwd","getDefaultLibFileName","options","getDefaultLibFilePath","createDefaultFormatCodeSettings","baseIndentSize","indentSize","tabSize","indentStyle","IndentStyle","Smart","newLineCharacter","convertTabsToSpaces","trimTrailingWhitespace","insertSpaceAfterCommaDelimiter","insertSpaceAfterSemicolonInForStatements","insertSpaceBeforeAndAfterBinaryOperators","insertSpaceAfterConstructor","insertSpaceAfterKeywordsInControlFlowStatements","insertSpaceAfterFunctionKeywordForAnonymousFunctions","insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis","insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets","insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces","insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces","insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces","insertSpaceAfterTypeAssertion","insertSpaceBeforeFunctionParenthesis","placeOpenBraceOnNewLineForFunctions","placeOpenBraceOnNewLineForControlBlocks","insertSpaceBeforeTypeAnnotation","host","languageService","createLanguageService","edits","getFormattingEditsForDocument","sort","a","b","span","start","reverse","forEach","edit","head","slice","tail","length","newText"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAEaA,mBAAmB;eAAnBA;;IAiDGC,SAAS;eAATA;;;qDAnDD;;;;;;AAER,IAAA,AAAMD,sBAAN,MAAMA;IAETE,QAAQC,QAAgB,EAAEC,IAAY,EAAE;QACpC,IAAI,CAACC,KAAK,CAACF,SAAS,GAAGG,mBAAE,CAACC,cAAc,CAACC,UAAU,CAACJ;IACxD;IACAK,SAASN,QAAgB,EAAE;QACvB,MAAMO,WAAW,IAAI,CAACL,KAAK,CAACF,SAAS;QACrC,OAAOO,WAAWA,SAASC,OAAO,CAAC,GAAGD,SAASE,SAAS,MAAMC;IAClE;IACAC,WAAWX,QAAgB,EAAE;QACzB,OAAOA,YAAY,IAAI,CAACE,KAAK;IACjC;;aAVAA,QAAwC,CAAC;aAWzCU,yBAAyB,IAAMT,mBAAE,CAACU,yBAAyB;aAC3DC,qBAAqB,IAAMC,OAAOC,IAAI,CAAC,IAAI,CAACd,KAAK;aACjDe,mBAAmB,IAAM;aACzBC,oBAAoB,CAAClB,WAAqB,IAAI,CAACE,KAAK,CAACF,SAAS;aAC9DmB,sBAAsB,IAAMC,QAAQC,GAAG;aACvCC,wBAAwB,CAACC,UAAgCpB,mBAAE,CAACqB,qBAAqB,CAACD;;AACtF;AAEA,SAASE;IAEL,OAAO;QACHC,gBAAgB;QAChBC,YAAY;QACZC,SAAS;QACTC,aAAa1B,mBAAE,CAAC2B,WAAW,CAACC,KAAK;QACjCC,kBAAkB;QAClBC,qBAAqB;QACrBC,wBAAwB;QACxBC,gCAAgC;QAChCC,0CAA0C;QAC1CC,0CAA0C;QAC1CC,6BAA6B;QAC7BC,iDAAiD;QACjDC,sDAAsD;QACtDC,4DAA4D;QAC5DC,yDAAyD;QACzDC,uDAAuD;QACvDC,6DAA6D;QAC7DC,4DAA4D;QAC5DC,+BAA+B;QAC/BC,sCAAsC;QACtCC,qCAAqC;QACrCC,yCAAyC;QACzCC,iCAAiC;IACrC;AACJ;AAEO,SAASpD,UAAUG,IAAY,EAAEsB,UAAUE,iCAAiC;IAC/E,MAAM0B,OAAO,IAAItD;IACjBsD,KAAKpD,OAAO,CAAC,YAAYE;IAEzB,MAAMmD,kBAAkBjD,mBAAE,CAACkD,qBAAqB,CAACF;IACjD,MAAMG,QAAQF,gBAAgBG,6BAA6B,CAAC,YAAYhC;IACxE+B,MACKE,IAAI,CAAC,CAACC,GAAGC,IAAMD,EAAEE,IAAI,CAACC,KAAK,GAAGF,EAAEC,IAAI,CAACC,KAAK,EAC1CC,OAAO,GACPC,OAAO,CAACC,CAAAA;QACL,MAAMC,OAAO/D,KAAKgE,KAAK,CAAC,GAAGF,KAAKJ,IAAI,CAACC,KAAK;QAC1C,MAAMM,OAAOjE,KAAKgE,KAAK,CAACF,KAAKJ,IAAI,CAACC,KAAK,GAAGG,KAAKJ,IAAI,CAACQ,MAAM;QAC1DlE,OAAO,CAAC,EAAE+D,KAAK,EAAED,KAAKK,OAAO,CAAC,EAAEF,KAAK,CAAC;IAC1C;IAEJ,OAAOjE;AACX"}